[{"url":"\/bootstrap.html","title":"The bootstrap script","content":"The bootstrap script\n\nCurrently there's not yet any documentation available on this topic.","description":"Explaination of the possible changes made by bootstrap.sh"},{"url":"\/de\/bootstrap.html","title":"Das Bootstrap-Skript","content":"Das Bootstrap-Skript\n\nMomentan ist zu diesem Thema noch keine Dokumentation vorhanden.","description":"Erkl\u00e4rung der einzelnen von bootstrap.sh vorgenommenen \u00c4nderungen"},{"url":"\/de\/","title":"Was ist shell-setup?","content":"Was ist shell-setup?\n\nshell-setup ist eine Sammlung aller Konfigurationsdateien f\u00fcr meine Linux-Terminal-Umgebung.\nEs gibt passend dazu das Skript [bootstrap.sh](https:\/\/gist.github.com\/moqmar\/7b468d995619131e983d59bde253d9a0), welches einen voll funktionsf\u00e4higen Debian-Server so wie ich ihn mag aufsetzt.\n\nDas hei\u00dft, das ganze Projekt ist ziemlich subjektiv. Ich mag einfache, platzsparende und benutzerfreundliche Konfigurationen (aus Sicht eines GNOME-Nutzers, ich wei\u00df dass Menschen die Emacs als Desktopumgebung verwenden eine andere Ansicht dazu haben, was benutzerfreundlich ist und was nicht).\n\nWenn du das auch so magst, w\u00e4re das perfekt, aber vielleicht m\u00f6chtest du auch [das Repository forken](https:\/\/github.com\/moqmar\/shell-setup#fork-destination-box) und deine eigene Version bauen. Mein Ziel ist nicht nur meine Konfiguration zu teilen, sondern auch einen einfachen Workflow zur Verf\u00fcgung zu stellen, um ein neues System schnell und einfach an die eigenen Vorlieben anzupassen.\n\nNutzerkonfiguration\n\nMomentan sind Konfigurationsdateien f\u00fcr die folgende Software dabei:\n\n- zsh: Ein sehr guter Bash-Ersatz mit vielen guten Plugins.\n- tmux: Ein Terminal-Multiplexer.\n- vim: Ein Kommandozeilen-Texteditor, der f\u00fcr so gut wie jedes System verf\u00fcgbar ist.\n- micro: Ein kleiner Texteditor mit intuitiver Bedienung (Maus, Strg+S, ...).\n- ssh: Erstellt einen SSH-Schl\u00fcsel und richtet die Ordnerberechtigungen ein.\n\nKonfiguration manuell anwenden\n\n$ git clone https:\/\/github.com\/moqmar\/shell-setup.git ~\/.shell-setup\n$ cd .shell-setup\n$ make install\n\nSiehe auch die [erweiterte Dokumentation](shell-setup.html) f\u00fcr mehr Informationen zum Anwenden und Ver\u00e4ndern der Konfiguration.\n\nDas Bootstrap-Skript\n\nAktuell ist das Skript in der Lage, die folgenden Dinge einzurichten (das Skript wird vor jedem Schritt fragen, ob er ausgef\u00fchrt werden soll):\n\n- locales: Auswahl der korrekten Lokalisierung f\u00fcr den Server.\n- apt: upgrade: Paketliste aktualisieren und auf die neueste Version aller Pakete updaten.\n- apt: install basic tools: vim, git, build-essential, zip\/unzip, tar, htop, wget, curl, dnsutils\n- apt: install additional tools: zsh, tmux, mosh, ag, jq\n- install binary tools: micro, exa, fd\n- user configuration: shell-setup f\u00fcr den aktuellen Nutzer anwenden.\n- default for new users: shell-setup immer f\u00fcr neue Nutzer anwenden.\n- clear motd, colored bash prompt\n- sshd config: Passwort-Authentifizierung verbieten und \/etc\/ssh\/sshd_config auf sinnvolle Standardwerte setzen.\n- quad9 nameserver\n- basic iptables ruleset: SSH, Mosh und Netzwerkrelevante Protokolle (ping, traceroute, dhcp) erlauben\n- caddy: Benutzerfreundlicher Webserver, kann optional auch mit PHP installiert werden.\n\nEs gibt eine [detaillierte Dokumentationsseite zu bootstrap.sh](bootstrap.html) mit mehr Informationen dar\u00fcber, welche \u00c4nderungen jeder der Schritte auf einem System bewirkt.\n\nVerwendung des Bootstrap-Skripts\n\n$ bash -c \". <(curl -s https:\/\/gist.githubusercontent.com\/moqmar\/7b468d995619131e983d59bde253d9a0\/raw)\"","description":"\u00dcbersicht \u00fcber shell-setup und bootstrap.sh"},{"url":"\/de\/shell-setup.html","title":"Das shell-setup Repository","content":"Das shell-setup Repository\n\n$ make\nUsage: make install[-zsh|-vim|-micro|-tmux]|clean|get-fontawesome|ssh-keygen|chsh\n\nzsh-Konfiguration\n\n- Antigen mit folgenden Plugins:\n\n- extract\n- command-not-found\n- colored-man-pages\n- sudo: 2x Esc schaltet sudo f\u00fcr den aktuellen Befehl an bzw. aus.\n- git\n- npm\n- tarruda\/zsh-autosuggestions\n\n- Prompt mit folgenden Funktionen:\n\n- Git-Integration\n- Anzeige des Exit-Codes\n- Anzeige der Zeit die ein Befehl ben\u00f6tigt hat\n- Font Awesome-Icons mit Erkenung des Systemtyps\n\n- Haufenweise Aliase f\u00fcr ls (ll = Tabelle, la = versteckte Dateien)\n- Wenn exa installiert ist wird es statt ls verwendet\n- become <user> ist Alias f\u00fcr sudo -iu <user> (Login-Shell)\n- transfer <filename> f\u00fcr Upload zu https:\/\/transfer.sh\n- qbin <filename> f\u00fcr Upload zu https:\/\/qbin.io (<command> | qbin - f\u00fcr Upload von STDIN)\n\nmicro-Konfiguration\n\n- default-light Farbschema; ohne Hintergrund und Zeilenhervorhebung f\u00fcr beste Geschwindigkeit per SSH.\n- comment-Plugin: mit Alt+# k\u00f6nnen Zeilen ein-\/auskommentiert werden.\n- .editorconfig-Unterst\u00fctzung\n- filemanager-Plugin (F6)\n- Zeilen\/Zeichen z\u00e4hlen (F5)\n\nvim-Konfiguration\n\n- Lightline zeigt alle wichtigen Informationen in der Fu\u00dfzeile an.\n- Lastplace merkt sich die Eingabeposition.\n- Farbschema: Brighton Lite; ohne Hintergrund und Zeilenhervorhebung f\u00fcr beste Geschwindigkeit per SSH.\n- Datei mit root-Rechten speichen (per sudo) mit :w!!.\n\ntmux-Konfiguration\n\n- Maussteuerung ist aktiviert.\n- Unauff\u00e4lliges Design.\n\nTastenkombinationen\n\nKommandosequenz: Strg + Leertaste\n\nK\u00fcrzel\tBeschreibung\n\u2190\u2193\u2191\u2192\tPanel ausw\u00e4hlen\nStrg+\u2190\u2193\u2191\u2192\tPanel vergr\u00f6\u00dfern\/verkleinern\n-\tHorizontal teilen\n<\tVertikal teilen (in deutschem Tastaturlayout selbe Taste wie |)\nt\tNeuer Tab\n,\tZu vorigem Tab wechseln\n.\tZu n\u00e4chstem Tab wechseln\n1-9\tZu bestimmtem Tab wechseln\nr\tKonfiguration neu laden","description":"Detaillierte Erkl\u00e4rung der von shell-setup vorgenommenen Konfigurations\u00e4nderungen"},{"url":"\/","title":"What is shell-setup?","content":"What is shell-setup?\n\nThis is basically a repository of all the dotfiles that make up my console configuration.\nThere's also the [bootstrap.sh](https:\/\/gist.github.com\/moqmar\/7b468d995619131e983d59bde253d9a0) script that sets up a fully functional Debian server as I like it.\n\nSo, this is all highly opinionated. I like simplicity, saving space and ease of use (from a GNOME user's perspective, I know that if your desktop environment is Emacs you'll find something different to be easy to use).\n\nIf you like that too, that's great, but you might want to [fork the repository](https:\/\/github.com\/moqmar\/shell-setup#fork-destination-box) and make your own version. The goal is not just to share my configuration, it's more about providing a workflow to quickly appy a configuration to a new system.\n\nUser configuration\n\nThe configuration currently works for:\n\n- zsh: An awesome bash replacement with a lot of great plugins available.\n- tmux: A terminal multiplexer.\n- vim: An advanced command line text editor that's available on pretty much every system.\n- micro: A tiny command line text editor with intuitive controls (mouse, Ctrl+S, ...).\n- ssh: Generates an SSH key and sets up folder permissions.\n\nManually applying the configuration\n\n$ git clone https:\/\/github.com\/moqmar\/shell-setup.git ~\/.shell-setup\n$ cd .shell-setup\n$ make install\n\nSee the [advanced documentation page](shell-setup.html) for more information about applying and modifiying the configuration.\n\nThe bootstrap script\n\nThe script can currently set up the following (it will ask for every step before running it):\n\n- locales: Choose the correct locale settings for the server.\n- apt: upgrade: Update package lists and upgrade all packages to the latest version.\n- apt: install basic tools: vim, git, build-essential, zip\/unzip, tar, htop, wget, curl, dnsutils\n- apt: install additional tools: zsh, tmux, mosh, ag, jq\n- install binary tools: micro, exa, fd\n- user configuration: Apply shell-setup for the current user.\n- default for new users: Apply shell-setup for all new users.\n- clear motd, colored bash prompt\n- sshd config: Don't allow password authentication and use simple \/etc\/ssh\/sshd_config.\n- quad9 nameserver\n- basic iptables ruleset: Allow SSH, Mosh and networking-relevant protocols (ping, traceroute, dhcp)\n- caddy: Easy-to-use webserver, can be optionally installed together with PHP.\n\nThere's a [detailed bootstrap.sh documentation page](bootstrap.html) available containing more information about what changes every one of the steps makes to a system.\n\nUsing the bootstrap script\n\n$ bash -c \". <(curl -s https:\/\/gist.githubusercontent.com\/moqmar\/7b468d995619131e983d59bde253d9a0\/raw)\"","description":"Overview of shell-setup and bootstrap.sh"},{"url":"\/shell-setup.html","title":"The shell-setup repository","content":"The shell-setup repository\n\nThis page is currently only available [in German](de\/shell-setup.html)","description":"Detailed explanation of the configuration changes made by shell-setup"}]